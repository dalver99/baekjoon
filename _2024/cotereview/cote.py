# #1번 배열 만지기
# #가로가 세로보다 길거나 같으면 2x1씩 집어서 큰거만 살리고
# #반대(세로가 길면) 1x2씩 집어서 작은거만 살리기

# #4x4 > 2x4> 2x2 > 1x2> 1x1 > 1x1 ... 
# #이거는 테스트케이스만 통과하면 뭐 쉬운듯 얼마나 빨리하냐가 중요


# len(arr)
# len(arr[0])

# 둘이 비교해서, 

# #k번만큼 반복
#     temp_arr = []
#     #가로가 더 큰경우:
#         이 안에서 짜고
#         열에 몇개 있음?
#         0~r/2
#         [j*2] [j*2+1]

#     #세로가 더 큰 경우
#         이안에서 짜고
#         행이 몇개 있음? /2 range
#         0~r/2
#         [j*2] [j*2+1]

#         세로가로 한번 뒤집었음 > 시간복잡도가 안좋음
#     arr = temp_arr


# #2번 커플만들기
# #이게 좀 순서가 사람마다 다를거같은데
# #규칙을 어긴회수를 세는 거고
# #규칙을 어기면 커플이 성사되지 않고
# #나를 고르거나 직전에 커플이 된 사람을 고르면 규칙을 어기게됨

# #이렇게 설명이 돼있긴한데 어차피 규칙 어긴거만 세면돼서
# penalty = [0,0,0,0]
# couple = ['n','n','n','n']
# #매칭되면
# couple = ['a','b','n','n']
# #어긴애들은
# penalty += sum(penalty)

# #3번 이게 좀 까다로웠는데
# #각 레벨별로 노드가 몇개인지 주어지고
# #이진트리를 구성할 수 있도록, 최소로 삭제를 한 뒤 최소로 추가를 하라는 문제였음

# [1,1,1]
# [1,2,2,3,3,3]
# [1,2,]

# # 문제 설명이 헷갈리긴 하는데 잘 이해해보면
# # 일단 삭제해야되는 걸 하고 (도중에 삭제할 일은 사실 없어야함 이러면 너무 어려움)
# # 추가해야되는거 다 추가하자마자 끝나는 세팅을 하고

# # 그때 각자 삭제한거랑 추가한걸 세기만 하면 됨 

# 예를들어서
# 1,2,2,3,3,3,3,4,4,4,4,4,4,4,4 => 삭제할 필요가 없음
# 비슷한 원리로
# 1,3,3,3,3 => 삭제할 필요가 없음

# 근데
# 1,3,3,3,3,3 => 삭제 하나 해야함
# 왜?
# 각 레벨별로
# 1,2^1,2^2,2^3을 초과하는건 만들 수가 없음
# 왜?
# 조건이 1은 한개만 있어야된다고 가정했음.

# 이렇게 하고나면.. 끝인거같은데 사실은

# 19번째줄부터 문제가 생김.
# 예를들어
# 1, 만약
# 19가 299,999개 있다고 쳐보자.
# 이거 가능함?

# ^이거를 캐치했냐 못했냐가 만점이냐 아니냐의 차이일듯

# 예를들어
# 1이 한개
# 30만이 299,999 이거 가능함? --> 이건 무조건 가능

# 그래서 중간에 계산기를 돌려보니까
# 2**17 이거랑
# 2**18승 이거를 다 확인을해서

# 트리 모양이 
# 19번째줄까지는, 각 줄에서 2^(n-1)개가 넘는거만 삭제

# 1,1,1 -> 1두번삭제
# 2,2,2,2,2,2,2 -> 2세번삭제


# .
# |\
# | \
# |  \
# .....

# |        \ 여기에 26만개가 -> 가능

# 2^300000??

# |        | 여기에 26만개가 있으면? 아무튼 가능함
# 근데 문제 조건상 숫자가 30만개가 최대니까.. 그밑으로는 카운트 안해ㅗㄷ됨
# #1 이거를 알았냐
# #2 조건문에 이걸 반영햇냐

# 1
# 2
# 4
# 1
# 2

# 2^18 대충 26만
# 여기서부터는 사실 몇개던 상관이없음
# 왜? 2^19 > 300,000 때문.

# #밑에서부터 확인해야됨. 

# 1
# 1
# 0
# 1

# 맨 밑에줄로 일단 가서
# 개수를 셈

# 만약 맨 밑에줄에 7개 있으면, 그 위줄에 최소 몇개 있어야되게? 4개 있으면됨
# 8개면 > 4
# 9개면 > 5
# 14 > 7
# 15 > 8
# roundup(n/2)
# 16 > 4
# 할튼 이렇게해서 만약 그 윗줄에 그거보다 부족하게 있으면, 그거만큼 추가하고 기록
# 이거를 2번째줄까지 반복하고나면 끝~

# #논리는
# 추가를 몇천만개를 해도디니까( 이건 진짜 제하니 없음)
# 절대ㅔ 삭제만은 하지마라
# [1,1,1] => 이거 아닌이상은 삭제할 필요없음

# 이렇게 일단 삭제를 다 하고나니까,
# 어 다시는 삭제를 할 필요가 없네?

# 1
# 2
# 3 > 2/3/4/5??
# 5
# 2

# 1
# 1
# 1
# 0
# 0
# 0
# .
# .
# 25만


# [1,1,1]
# [1,2,2,3,3,3]
# [1,2,]

# count(n)